from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes
from config import KARBAN_CHAT_LINK, KARBAN_SITE

import json
import os

USERS_FILE = "data/users.json"

def load_users():
    if not os.path.exists(USERS_FILE):
        return {}
    with open(USERS_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

async def send_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Karban"""
    keyboard = [
        [InlineKeyboardButton("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data='cabinet')],
        [InlineKeyboardButton("–°–æ–æ–±—â–µ—Å—Ç–≤–æ", callback_data='community')],
        [InlineKeyboardButton("–§–∏–ª–æ—Å–æ—Ñ–∏—è", callback_data='philosophy')],
        [InlineKeyboardButton("–û Karban", callback_data='about_menu')],
        [InlineKeyboardButton("–î–Ω–µ–≤–Ω–∏–∫", callback_data='diary')]
    ]
    text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Karban. –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:"
    if update.callback_query:
        await update.callback_query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    user_id = str(query.from_user.id)
    users = load_users()
    user = users.get(user_id, {})

    if data == "cabinet":
        # –ü–æ–∫–∞–∑–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –∞—Ä—Ö–µ—Ç–∏–ø–æ–º
        balance = user.get("krb", 0)
        rep = user.get("rep", 0)
        archetype = user.get("archetype", "–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω")
        text = (
            f"üóùÔ∏è –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n"
            f"–ë–∞–ª–∞–Ω—Å: {balance} KRB\n"
            f"–†–µ–ø—É—Ç–∞—Ü–∏—è: {rep}\n"
            f"–ê—Ä—Ö–µ—Ç–∏–ø: {archetype}\n\n"
            "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        keyboard = [
            [InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

    elif data == "community":
        await query.edit_message_text(
            f"üåê –°–æ–æ–±—â–µ—Å—Ç–≤–æ: {KARBAN_CHAT_LINK}",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="main_menu")]])
        )

    elif data == "philosophy":
        await query.edit_message_text(
            "üìú –§–∏–ª–æ—Å–æ—Ñ–∏—è Karban:\n"
            "–ú—ã –≤–µ—Ä–∏–º –≤ —Å–∏–ª—É –µ–¥–∏–Ω—Å—Ç–≤–∞, –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞.\n"
            "–í–æ–ø—Ä–æ—Å –¥–Ω—è: –ö–∞–∫–æ–π —Ç–≤–æ–π –≥–ª–∞–≤–Ω—ã–π —Å–º—ã—Å–ª –Ω–∞ —Å–µ–≥–æ–¥–Ω—è?",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="main_menu")]])
        )

    elif data == "about_menu":
        await query.edit_message_text(
            f"‚ÑπÔ∏è –û Karban:\n"
            f"–°–∞–π—Ç: {KARBAN_SITE}\n"
            "–°–æ–∑–¥–∞—Ç–µ–ª—å: @founder\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–æ–±—ã—Ç–∏—è–º–∏ Karban!",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="main_menu")]])
        )

    elif data == "diary":
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–Ω–µ–≤–Ω–∏–∫–∞
        await query.edit_message_text(
            "‚úçÔ∏è –î–Ω–µ–≤–Ω–∏–∫:\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∑–∞–ø–∏—Å—å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="main_menu")]])
        )
        context.user_data["waiting_diary"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è main.py
send_main_menu_handler = CallbackQueryHandler(send_main_menu, pattern="^main_menu$")
menu_callback_handler = CallbackQueryHandler(menu_callback, pattern="^(cabinet|community|philosophy|about_menu|diary)$")
