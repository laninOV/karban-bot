import json
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackQueryHandler, ContextTypes
from config import KARBAN_CHAT_LINK

USERS_FILE = "data/users.json"

def load_users():
    if not os.path.exists(USERS_FILE):
        return {}
    with open(USERS_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

def save_users(users):
    with open(USERS_FILE, "w", encoding="utf-8") as f:
        json.dump(users, f, ensure_ascii=False, indent=2)

async def registration_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã"""
    query = update.callback_query
    user = query.from_user
    users = load_users()
    user_id = str(user.id)

    if user_id in users and users[user_id].get("registered"):
        await query.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        await query.edit_message_text(
            "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n"
            f"–ß–∞—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞: {KARBAN_CHAT_LINK}",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ö–µ—Ç–∏–ø –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
    archetype = users.get(user_id, {}).get("archetype", "–†–µ–∑–∏–¥–µ–Ω—Ç")

    users[user_id] = {
        "id": user.id,
        "username": user.username,
        "first_name": user.first_name,
        "registered": True,
        "krb": 50,
        "rep": 1,
        "archetype": archetype,
        "diary": "",
        "referrals": [],
        "influence": 0
    }
    save_users(users)

    await query.edit_message_text(
        "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ Karban.\n\n"
        f"–í–æ—Ç –≤–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä:\n"
        f"‚Ä¢ –°—Å—ã–ª–∫–∞ –≤ —á–∞—Ç: {KARBAN_CHAT_LINK}\n"
        "‚Ä¢ KRB-–∫–æ—à–µ–ª–µ–∫: 50 KRB\n"
        "‚Ä¢ –†–µ–ø—É—Ç–∞—Ü–∏—è: 1\n"
        "‚Ä¢ –ö—É—Ä–∞—Ç–æ—Ä: @–í–∞—Å–∏–ª–∏–π\n\n"
        "–ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç: ¬´–ú–µ–Ω—è –∑–æ–≤—É—Ç [–∏–º—è], —è —Ö–æ—á—É [—Ü–µ–ª—å]. –ö—Ç–æ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å?¬ª –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 2 KRB +1 –†–µ–ø.",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è main.py
registration_handler = CallbackQueryHandler(registration_button, pattern="^register$")
