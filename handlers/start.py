from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes

# –¢–µ–∫—Å—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ "–ß—Ç–æ —Ç–∞–∫–æ–µ –ö–∞—Ä–±–∞–Ω?"
about_cards = [
    "üåü –ö–∞—Ä–±–∞–Ω ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–æ–∞–≤—Ç–æ—Ä–æ–º. –ó–¥–µ—Å—å —Ü–µ–Ω–∏—Ç—Å—è –ª–∏—á–Ω—ã–π —Ä–æ—Å—Ç, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ.",
    "üéØ –í Karban —Ç—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Ç–µ—Å—Ç, –≤—ã–±–∏—Ä–∞–µ—à—å —Å–≤–æ–π –ø—É—Ç—å (–†–µ–∑–∏–¥–µ–Ω—Ç –∏–ª–∏ –Æ–Ω), –ø–æ–ª—É—á–∞–µ—à—å –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É, –∫–æ—à–µ–ª—å–∫—É, –¥–Ω–µ–≤–Ω–∏–∫—É –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.",
    "‚ö° –í–Ω—É—Ç—Ä–∏ ‚Äî –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤: –≤–æ–ø—Ä–æ—Å –¥–Ω—è, –º–∞–Ω–∏—Ñ–µ—Å—Ç, –±–∞–Ω–∫ —Å–º—ã—Å–ª–æ–≤, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤. Karban ‚Äî —Å—Ä–µ–¥–∞ –¥–ª—è —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –Ω–æ–≤—ã—Ö —Å–≤—è–∑–µ–π."
]

async def start_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start"""
    keyboard = [
        [InlineKeyboardButton("–•–æ—á—É –≤—Å—Ç—É–ø–∏—Ç—å", callback_data='join')],
        [InlineKeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –ö–∞—Ä–±–∞–Ω?", callback_data='about_card_0')],
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Ç–µ—Å—Ç", callback_data='test')]
    ]
    
    text = ("–ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–ø–∞–ª(–∞) –≤ Karb–∞–Ω ‚Äî —Å—Ä–µ–¥—É –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. "
            "–ó–¥–µ—Å—å —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî —Ç—ã —Å–æ–∞–≤—Ç–æ—Ä. –°–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–π —à–∞–≥.")
    
    if update.message:
        await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
    elif update.callback_query:
        await update.callback_query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

async def join_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–•–æ—á—É –≤—Å—Ç—É–ø–∏—Ç—å' —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Å–ª–æ–≤–∏–π"""
    query = update.callback_query
    await query.edit_message_text(
        "üíé –£—Å–ª–æ–≤–∏—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ Karban:\n\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤\n"
        "‚Ä¢ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å KRB-–∫–æ—à–µ–ª—å–∫–æ–º –∏ —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –¥–ª—è —Å–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏–∏\n"
        "‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞—Ö\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞ @–í–∞—Å–∏–ª–∏–π\n"
        "‚Ä¢ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä: 50 KRB + 1 —Ä–µ–ø—É—Ç–∞—Ü–∏—è\n\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è: [—É–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å]\n"
        "–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: [—É–∫–∞–∑–∞—Ç—å —Å–ø–æ—Å–æ–±—ã]\n\n"
        "–ì–æ—Ç–æ–≤(–∞) –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è?",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å –∏ –≤—Å—Ç—É–ø–∏—Ç—å", callback_data='register')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='main_start')]
        ])
    )

async def about_card_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ '–ß—Ç–æ —Ç–∞–∫–æ–µ –ö–∞—Ä–±–∞–Ω?'"""
    query = update.callback_query
    data = query.data
    idx = int(data.split("_")[-1])
    
    text = about_cards[idx]
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons = []
    nav_row = []
    
    if idx > 0:
        nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"about_card_{idx - 1}"))
    if idx < len(about_cards) - 1:
        nav_row.append(InlineKeyboardButton("–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"about_card_{idx + 1}"))
    
    if nav_row:
        buttons.append(nav_row)
    
    buttons.append([InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_start")])
    
    await query.edit_message_text(
        f"–ö–∞—Ä—Ç–æ—á–∫–∞ {idx + 1} –∏–∑ {len(about_cards)}\n\n{text}",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
start_handler = CommandHandler("start", start_button)
start_menu_handler = CallbackQueryHandler(start_button, pattern="^main_start$")
join_handler = CallbackQueryHandler(join_button, pattern="^join$")
about_cards_handler = CallbackQueryHandler(about_card_handler, pattern="^about_card_[0-9]+$")
