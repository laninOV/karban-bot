# handlers/start.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes

about_cards = [
    "üåü Karban ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–æ–∞–≤—Ç–æ—Ä–æ–º. –ó–¥–µ—Å—å —Ü–µ–Ω–∏—Ç—Å—è –ª–∏—á–Ω—ã–π —Ä–æ—Å—Ç –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
    "üéØ –ü—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç, –≤—ã–±–µ—Ä–∏ –ø—É—Ç—å (–†–µ–∑–∏–¥–µ–Ω—Ç –∏–ª–∏ –Æ–Ω), –ø–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É, –∫–æ—à–µ–ª—å–∫—É, —Ä–µ—Ñ–∫–∞–º, –¥–Ω–µ–≤–Ω–∏–∫—É, –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏.",
    "‚ö° –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤: –≤–æ–ø—Ä–æ—Å –¥–Ω—è, –º–∞–Ω–∏—Ñ–µ—Å—Ç, –±–∞–Ω–∫ —Å–º—ã—Å–ª–æ–≤, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤. Karban ‚Äî —Å—Ä–µ–¥–∞ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏."
]

async def start_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–•–æ—á—É –≤—Å—Ç—É–ø–∏—Ç—å", callback_data='join')],
        [InlineKeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –ö–∞—Ä–±–∞–Ω?", callback_data='about_0')],
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Ç–µ—Å—Ç", callback_data='test')]
    ]
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–ø–∞–ª(–∞) –≤ Karban ‚Äî —Å—Ä–µ–¥—É –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. "
        "–ó–¥–µ—Å—å —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî —Ç—ã —Å–æ–∞–≤—Ç–æ—Ä. –°–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–π —à–∞–≥."
    )
    if update.message:
        await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        await update.callback_query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

async def join_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.edit_message_text(
        "üíé –£—Å–ª–æ–≤–∏—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è:\n"
        "- –î–æ—Å—Ç—É–ø –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤\n"
        "- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å KRB –∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π\n"
        "- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫\n"
        "- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è\n"
        "- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞ @–í–∞—Å–∏–ª–∏–π\n"
        "- –°—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä: 50 KRB + 1 —Ä–µ–ø\n\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å: [—É–∫–∞–∑–∞—Ç—å]\n"
        "–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: [—É–∫–∞–∑–∞—Ç—å]",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å –∏ –≤—Å—Ç—É–ø–∏—Ç—å", callback_data='register')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main')]
        ])
    )

async def about_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    idx   = int(query.data.split("_")[1])
    text  = f"–ö–∞—Ä—Ç–æ—á–∫–∞ {idx+1}/{len(about_cards)}\n\n{about_cards[idx]}"
    buttons = []
    if idx > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"about_{idx-1}"))
    if idx < len(about_cards)-1:
        buttons.append(InlineKeyboardButton("–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"about_{idx+1}"))
    buttons.append(InlineKeyboardButton("–í –º–µ–Ω—é", callback_data='main'))
    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup([buttons]))

start_handler        = CommandHandler("start", start_button)
start_menu_handler   = CallbackQueryHandler(start_button, pattern="^main$")
join_handler         = CallbackQueryHandler(join_button, pattern="^join$")
about_cards_handler  = CallbackQueryHandler(about_handler, pattern="^about_[0-9]+$")
